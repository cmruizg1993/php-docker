{"version":3,"sources":["./src/app/control/control-routing.module.ts","./src/app/control/control.module.ts","./src/app/control/control.page.ts","./src/app/control/control.page.scss","./src/app/control/control.page.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEV;AAE7C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sDAAW;KACvB;CACF,CAAC;IAMW,wBAAwB,SAAxB,wBAAwB;CAAG;AAA3B,wBAAwB;IAJpC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,wBAAwB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AChBI;AACM;AACF;AAEA;AAEuB;AAEvB;IAWhC,iBAAiB,SAAjB,iBAAiB;CAAG;AAApB,iBAAiB;IAT7B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,6EAAwB;SACzB;QACD,YAAY,EAAE,CAAC,sDAAW,CAAC;KAC5B,CAAC;GACW,iBAAiB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACnB9B,4DAA4D;AACV;AAEsB;IAO3D,WAAW,SAAX,WAAW;IAGtB,YACU,QAAyB;QAAzB,aAAQ,GAAR,QAAQ,CAAiB;QAHnC,SAAI,GAAG,IAAI,CAAC;IAIT,CAAC;IACJ,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACD,OAAO;QACL,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YACzF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,UAAU;QACR,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7C,CAAC;IACD,WAAW;QACT,gDAAgD;QAChD,0CAA0C;QAC1C,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC;IAC1C,CAAC;CAEF;;YA/BQ,gFAAe;;AAOX,WAAW;IALvB,wDAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,4EAAkC;;KAEnC,CAAC;GACW,WAAW,CAwBvB;AAxBuB;;;;;;;;;;;;;;;;ACVxB,iEAAe,8CAA8C,mHAAmH,E;;;;;;;;;;;;;;;ACAhL,iEAAe,usBAAusB,4XAA4X,6vBAA6vB,4XAA4X,kwBAAkwB,mYAAmY,gcAAgc,E","file":"src_app_control_control_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ControlPage } from './control.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ControlPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ControlPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ControlPageRoutingModule } from './control-routing.module';\r\n\r\nimport { ControlPage } from './control.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ControlPageRoutingModule\r\n  ],\r\n  declarations: [ControlPage]\r\n})\r\nexport class ControlPageModule {}\r\n","/* eslint-disable @angular-eslint/use-lifecycle-interface */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { RealtimeService } from '../services/realtime/realtime.service';\r\n\r\n@Component({\r\n  selector: 'app-control',\r\n  templateUrl: './control.page.html',\r\n  styleUrls: ['./control.page.scss'],\r\n})\r\nexport class ControlPage implements OnInit {\r\n  data = null;\r\n  firebaseSubscription: Subscription;\r\n  constructor(\r\n    private realtime: RealtimeService\r\n  ) {}\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  getData(){\r\n    this.firebaseSubscription = this.realtime.getLevelData('control/').subscribe((data: any) => {\r\n      console.log(data);\r\n      this.data = data;\r\n    });\r\n  }\r\n  sendChange(){\r\n    this.realtime.updateControlData(this.data);\r\n  }\r\n  ngOnDestroy(): void {\r\n    //Called once, before the instance is destroyed.\r\n    //Add 'implements OnDestroy' to the class.\r\n    this.firebaseSubscription.unsubscribe();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb250cm9sLnBhZ2Uuc2NzcyJ9 */\";","export default \"<!-- Back button with a default href -->\\r\\n<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"menu\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content *ngIf=\\\"data\\\">\\r\\n  <ion-card class=\\\"welcome-card\\\">\\r\\n    <ion-card-header>\\r\\n      <ion-card-title>Valores Actuales Lámparas:\\r\\n        <ion-text color=\\\"warning\\\">\\r\\n          <i class=\\\"fa fa-lightbulb\\\"></i>\\r\\n        </ion-text>\\r\\n      </ion-card-title>\\r\\n    </ion-card-header>\\r\\n    <ion-card-content>\\r\\n      <ion-list>\\r\\n        <ion-item>\\r\\n          <ion-label>Nivel 1:\\r\\n            <ng-container *ngIf=\\\"data.lampara.nivel1; else elseTemplate\\\">\\r\\n              <span>Encendido</span>\\r\\n            </ng-container>\\r\\n          </ion-label>\\r\\n          <ion-toggle color=\\\"warning\\\" [(ngModel)]=\\\"data.lampara.nivel1\\\" (ngModelChange)=\\\"sendChange()\\\"></ion-toggle>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label>Nivel 2:\\r\\n            <ng-container *ngIf=\\\"data.lampara.nivel2; else elseTemplate\\\">\\r\\n              <span>Encendido</span>\\r\\n            </ng-container>\\r\\n          </ion-label>\\r\\n          <ion-toggle color=\\\"warning\\\" [(ngModel)]=\\\"data.lampara.nivel2\\\" (ngModelChange)=\\\"sendChange()\\\"></ion-toggle>\\r\\n        </ion-item>\\r\\n      </ion-list>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n  <ion-card class=\\\"welcome-card\\\">\\r\\n    <ion-card-header>\\r\\n      <ion-card-title>Valores Actuales Regadío:\\r\\n        <ion-text color=\\\"primary\\\">\\r\\n          <i class=\\\"fa fa-water\\\"></i>\\r\\n        </ion-text>\\r\\n      </ion-card-title>\\r\\n    </ion-card-header>\\r\\n    <ion-card-content>\\r\\n      <ion-list>\\r\\n        <ion-item>\\r\\n          <ion-label>Nivel 1:\\r\\n            <ng-container *ngIf=\\\"data.valvula.nivel1; else elseTemplate\\\">\\r\\n              <span>Encendido</span>\\r\\n            </ng-container>\\r\\n          </ion-label>\\r\\n          <ion-toggle color=\\\"primary\\\" [(ngModel)]=\\\"data.valvula.nivel1\\\" (ngModelChange)=\\\"sendChange()\\\"></ion-toggle>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label>Nivel 2:\\r\\n            <ng-container *ngIf=\\\"data.valvula.nivel2; else elseTemplate\\\">\\r\\n              <span>Encendido</span>\\r\\n            </ng-container>\\r\\n          </ion-label>\\r\\n          <ion-toggle color=\\\"primary\\\" [(ngModel)]=\\\"data.valvula.nivel2\\\" (ngModelChange)=\\\"sendChange()\\\"></ion-toggle>\\r\\n        </ion-item>\\r\\n      </ion-list>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n  <ion-card class=\\\"welcome-card\\\">\\r\\n    <ion-card-header>\\r\\n      <ion-card-title>Valores Actuales Ventiladores:\\r\\n        <ion-text color=\\\"dark\\\">\\r\\n          <i class=\\\"fa fa-fan\\\"></i>\\r\\n        </ion-text>\\r\\n      </ion-card-title>\\r\\n    </ion-card-header>\\r\\n    <ion-card-content>\\r\\n      <ion-list>\\r\\n        <ion-item>\\r\\n          <ion-label>Nivel 1:\\r\\n            <ng-container *ngIf=\\\"data.ventiladores.nivel1; else elseTemplate\\\">\\r\\n              <span>Encendido</span>\\r\\n            </ng-container>\\r\\n          </ion-label>\\r\\n          <ion-toggle color=\\\"dark\\\" [(ngModel)]=\\\"data.ventiladores.nivel1\\\" (ngModelChange)=\\\"sendChange()\\\"></ion-toggle>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label>Nivel 2:\\r\\n            <ng-container *ngIf=\\\"data.ventiladores.nivel2; else elseTemplate\\\">\\r\\n              <span>Encendido</span>\\r\\n            </ng-container>\\r\\n          </ion-label>\\r\\n          <ion-toggle color=\\\"dark\\\" [(ngModel)]=\\\"data.ventiladores.nivel2\\\" (ngModelChange)=\\\"sendChange()\\\"></ion-toggle>\\r\\n        </ion-item>\\r\\n      </ion-list>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n\\r\\n  <ng-template #elseTemplate>\\r\\n          <span>Apagado</span>\\r\\n  </ng-template>\\r\\n</ion-content>\\r\\n\";"],"sourceRoot":"webpack:///"}